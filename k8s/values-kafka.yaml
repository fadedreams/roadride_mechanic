# Bitnami Kafka Helm Chart values.yaml - Fixed for single-node PLAINTEXT KRaft matching docker-compose
# Sources: Bitnami GitHub README, Artifact Hub values, community examples (e.g., Stack Overflow)

## Global Docker image parameters
image:
  registry: docker.io
  repository: bitnami/kafka
  tag: 3.8.0-debian-12-r1  # Matches your 3.6 base
  pullPolicy: IfNotPresent
  pullSecrets: []

## Authentication (disabled for PLAINTEXT)
auth:
  enabled: false

## Replicas (explicit single-node)
replicaCount: 1

## Persistence
persistence:
  enabled: true
  storageClass: ""  # Default StorageClass
  accessModes:
    - ReadWriteOnce
  size: 8Gi
  annotations: {}

## Resources
resources:
  requests:
    cpu: 500m
    memory: 1Gi
  limits:
    cpu: 1.0
    memory: 2Gi

## ZooKeeper (disabled to force KRaft)
zookeeper:
  enabled: false

## KRaft mode (single-node config)
kraft:
  enabled: true
  version: 0  # Static quorum for single-node (default 1/dynamic enforces multi-replica)
  clusterId: XqZrTh1yT8qXwjsn1a6L9A
  quorumReplicaCount: 1  # Key: Forces single-replica quorum (overrides chart default of 3)
  nodeIds:
    - 1
  controllers:
    - 1@my-kafka-headless.roadride.svc.cluster.local:9093  # Single controller; namespace=roadride

## Listeners (PLAINTEXT, ports matching docker-compose)
listeners:
  internal:
    containerPort: 9094
    servicePort: 9094
    protocol: PLAINTEXT
    advertisedHost: my-kafka-headless.roadride.svc.cluster.local
    advertisedPort: 9094
  external:
    enabled: true
    containerPort: 9092
    servicePort: 9092
    protocol: PLAINTEXT
    advertisedHost: ""  # Auto for NodePort
    advertisedPort: 9092
  controller:
    containerPort: 9093
    servicePort: 9093
    protocol: PLAINTEXT

## Inter-broker and controller
interBrokerListenerName: internal
controllerListenerNames:
  - controller

## Extra env vars
extraEnvVars:
  - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
    value: "true"
  - name: ALLOW_PLAINTEXT_LISTENER
    value: "yes"

## Security map
listenerSecurityProtocolMap: |
  INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT

## Nodes
nodes:
  - id: 1
    host: my-kafka-headless.roadride.svc.cluster.local

## Probes (matching docker-compose healthcheck)
livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 5
  successThreshold: 1
  exec:
    command:
      - /bin/bash
      - -ec
      - |
        /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9094 --list

readinessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 5
  successThreshold: 1
  exec:
    command:
      - /bin/bash
      - -ec
      - |
        /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9094 --list

startupProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 30

## Services
service:
  type: ClusterIP
  annotations: {}

headlessService:
  enabled: true
  type: ClusterIP
  annotations: {}

## External Access (NodePort for 9092; internal controller)
externalAccess:
  enabled: true
  autoDiscovery:
    enabled: false  # Avoids conflicts
  service:
    type: NodePort
    domain: ""  # Empty for NodePort; set to <node-ip> if needed post-install
    ports:
      external: 9092
    nodePorts:
      - 9092
    annotations: {}
  loadBalancer:
    enabled: false
  ingress:
    enabled: false
  controller:
    enabled: false
    service:
      type: ClusterIP
      domain: my-kafka-headless.roadride.svc.cluster.local
      annotations: {}

## Metrics (disabled)
metrics:
  kafka:
    enabled: false
  jmx:
    enabled: false
    serviceMonitor:
      enabled: false
  prometheusRule:
    enabled: false

## Other defaults
initContainers: []
sidecars: []
nodeSelector: {}
affinity: {}
tolerations: []
pdb:
  create: false
serviceAccount:
  create: true
rbac:
  create: true
podSecurityContext:
  enabled: true
  fsGroup: 1001
containerSecurityContext:
  enabled: true
  runAsUser: 1001
  runAsNonRoot: true
extraVolumes: []
extraVolumeMounts: []
networkPolicy:
  enabled: false
autoscale:
  enabled: false
